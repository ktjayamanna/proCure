"""add_vendor_domain_to_contracts

Revision ID: 6088a13b7ea3
Revises: 02889f872fde
Create Date: 2025-04-23 18:12:00.081554

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6088a13b7ea3'
down_revision: Union[str, None] = '02889f872fde'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # First add the column as nullable
    op.add_column('contracts', sa.Column('vendor_domain', sa.String(length=255), nullable=True, comment='Base domain of the product URL (e.g., example.com)'))

    # Import domain extraction function and other dependencies
    from sqlalchemy import text
    import tldextract

    # Define get_base_domain function for the migration
    # Note: We define it here instead of importing from utils to make the migration self-contained
    def get_base_domain(url):
        ext = tldextract.extract(url)
        return f"{ext.domain}.{ext.suffix}"

    # Update existing records with extracted domain
    conn = op.get_bind()
    results = conn.execute(text("SELECT contract_id, product_url FROM contracts WHERE vendor_domain IS NULL"))

    for contract_id, product_url in results:
        try:
            domain = get_base_domain(product_url)
            conn.execute(
                text("UPDATE contracts SET vendor_domain = :domain WHERE contract_id = :contract_id"),
                {"domain": domain, "contract_id": contract_id}
            )
        except Exception as e:
            print(f"Error updating contract {contract_id}: {e}")
            # Set a fallback domain if extraction fails
            conn.execute(
                text("UPDATE contracts SET vendor_domain = 'unknown.com' WHERE contract_id = :contract_id"),
                {"contract_id": contract_id}
            )

    # Now make the column non-nullable
    op.alter_column('contracts', 'vendor_domain', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('contracts', 'vendor_domain')
    # ### end Alembic commands ###
